<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>paramIn</name>
	<filePath>src/main/java/${packageName}/${moduleName}/vo/input</filePath>
	<fileName>${ClassName}${FunctionName}In.java</fileName>
	<content><![CDATA[
package ${packageName}.${moduleName}.vo.input;

<#list enImportList as i>
import ${i};
</#list>

<#assign notNullNum=0/>
<#list enParamList as c>
<#if c.isNotNull?? && (c.isNotNull=='Y' || c.isNotNull=='y') && notNullNum == 0>
import org.hibernate.validator.constraints.NotBlank;
import javax.validation.constraints.NotNull;
<#assign notNullNum=1/>
</#if>
<#if c.maxLength??>
import org.hibernate.validator.constraints.Length;
</#if>
</#list>

import ${packageName}.common.vo.BaseParam;

import lombok.Data;

/**
 * ${interNo} ${interName}
 * @author ${functionAuthor}
 * @version ${functionVersion}
 */
@Data
public class ${ClassName}${FunctionName}In extends BaseParam {
	
	private static final long serialVersionUID = 1L;
	
	<#-- 生成字段属性 -->
	<#list enParamList as c>
	
	<#if c.fieldName=='pageSize' || c.fieldName=='pageNo' || c.fieldName=='tokenId'>
	<#else>
	<#if c.isNotNull?? && (c.isNotNull=='Y' || c.isNotNull=='y')>
		<#if c.simpleJavaType == 'int' || c.simpleJavaType == 'Integer' || c.simpleJavaType == 'BigDecimal' || c.simpleJavaType == 'Double' || c.simpleJavaType == 'Date' || c.simpleJavaType == 'Byte' || c.simpleJavaType == 'byte'>
	@NotNull(message = "${c.fieldName}不能为空.")
		<#else>
	@NotBlank(message = "${c.fieldName}不能为空.")
		</#if>
	</#if>
	<#if c.maxLength??>
	@Length(max = ${c.maxLength},message = "长度不能超过${c.maxLength}位")
	</#if>
	<#if c.simpleJavaType=='Date'>
	@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss")
	</#if>
	private ${c.simpleJavaType} ${c.fieldName};		<#if c.description??>// ${c.description}</#if>
	</#if>
	</#list>
	
}]]>
	</content>
</template>